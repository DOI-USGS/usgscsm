language: cpp
sudo: false

branches:
  only:
    - master
    - dev

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CXX=g++-7 && CC=gcc-7"
    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CXX=clang++ && CC=clang"

before_install:
  - echo "$TRAVIS_PULL_REQUEST"
  - eval "${MATRIX_EVAL}"
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      pip install --user cpp-coveralls;
    fi
install:
  # Install a supported cmake version (>= 3.10)
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh  https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh
  - conda install -y -c conda-forge cmake

script:
  - mkdir build
  - cd build
  - cmake -DCOVERAGE=ON ..
  - cmake --build .
  - ctest -VV
  - cd ..

after_success:
  - conda install -y -q conda-build anaconda-client
  # Pull the libcsm for the build from our anaconda channel
  - conda config --add channels usgs-astrogeology
  - conda config --set anaconda_upload no
  - conda build recipe -q
  # Get the conda build output dir
  - builddir=(`conda build recipe --output`)
  # Label based on the branch and upload to anaconda.org
  - |
    if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      anaconda -t="$CONDA_UPLOAD_TOKEN" upload $builddir;
    elif [ "$TRAVIS_BRANCH" == "dev" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      anaconda -t="$CONDA_UPLOAD_TOKEN" upload $builddir --label dev --force;
    fi
